{"name":"Chef-email-reporter","tagline":"Sends chef-client errors via email.  More detailed than a simple chef_handler.","body":"# chef-email-reporter\r\n\r\nThis gem extends the Chef client, allowing notifications to be sent via email\r\nto a pre-determined address when a `chef-client` run fails on a node.  This\r\ngives administrators the confidence that errors on Chef nodes won't go\r\nunnoticed.\r\n\r\nWhile it is possible to do this with a simple handler (see\r\nhttp://docs.getchef.com/handlers.html), one typically only receives the text of\r\nthe exception with a handler.  `chef-email-reporter` provides information\r\nidentical to what one would receive when running `chef-client` at the terminal:\r\nthe exception, the resource declaration, and the compiled resource.  See below\r\nfor a sample email sent by `chef-email-reporter`.\r\n\r\n![email screenshot](http://jeffshantz.github.io/chef-email-reporter/screenshots/screenshot-html.png)\r\n\r\nHaving this additional information can ease troubleshooting for administrators.\r\n\r\n## Installation\r\n\r\nInstall the `chef-email-reporter` gem on the node:\r\n\r\n```\r\n/opt/chef/embedded/bin/gem install chef-email-reporter\r\n```\r\n\r\nAdd something like the following to your `/etc/chef/client.rb` file (see the\r\n**Usage** section below for more details):\r\n\r\n```ruby\r\ngem     \"chef-email-reporter\"\r\nrequire \"chef-email-reporter\"\r\n\r\nMail.defaults do\r\n  delivery_method :smtp, address: 'smtp.example.com'\r\nend\r\n\r\nemail_sender    \"no.reply@example.com\"\r\nemail_recipient \"chef-notifications@example.com\"\r\n```\r\n\r\nProfit.\r\n\r\n## Usage\r\n\r\nAssuming you have already installed `chef-email-reporter` on your node, you must\r\nactivate it by adding the following to your `/etc/chef/client.rb` file:\r\n\r\n```ruby\r\ngem     \"chef-email-reporter\"\r\nrequire \"chef-email-reporter\"\r\n```\r\n\r\nYou should also specify the sender and recipient email addresses for\r\nnotifications sent by `chef-email-reporter`:\r\n\r\n```ruby\r\nemail_sender    \"no.reply@example.com\"\r\nemail_recipient \"chef-notifications@example.com\"\r\n```\r\n\r\nFinally, depending on how you want your mail delivered, you may need to specify\r\nsome settings for `Mail.defaults`.  See the examples below for an idea of what\r\nis possible.\r\n\r\n### Examples\r\n\r\n`chef-email-reporter` uses the `mail` gem to deliver email, so any delivery\r\nmethods supported by `mail` are supported.  For full details, see the \r\ndocumentation at https://github.com/mikel/mail.  Since the documentation is\r\nlacking slightly, you are advised to have a look in the comments in the files at\r\nhttps://github.com/mikel/mail/tree/master/lib/mail/network/delivery_methods.\r\n\r\n#### Sending email via SMTP\r\n\r\nAdd the following to `/etc/chef/client.rb`:\r\n\r\n```ruby\r\ngem     \"chef-email-reporter\"\r\nrequire \"chef-email-reporter\"\r\n\r\nMail.defaults do\r\n  delivery_method :smtp, {\r\n    :address              => \"smtp.example.com\",\r\n    :port                 => 25,\r\n    :domain               => \"example.com\",\r\n    :user_name            => \"jeff\",\r\n    :password             => \"secret\",\r\n    :authentication       => \"plain\",\r\n    :enable_starttls_auto => true\r\n  }\r\nend\r\n\r\nemail_sender    \"no.reply@example.com\"\r\nemail_recipient \"chef-notifications@example.com\"\r\n```\r\n\r\nExamples for sending email via Gmail and Amazon SES are provided in the wiki\r\nfor the `mail` gem:\r\n\r\n* Gmail: https://github.com/mikel/mail/wiki/Sending-email-via-Gmail-SMTP\r\n* Amazon SES: https://github.com/mikel/mail/wiki/Sending-email-via-Amazon-SES\r\n\r\n#### Sending email via `sendmail`\r\n\r\n```ruby\r\ngem     \"chef-email-reporter\"\r\nrequire \"chef-email-reporter\"\r\n\r\nMail.defaults do\r\n  delivery_method :sendmail\r\nend\r\n\r\nemail_sender    \"no.reply@example.com\"\r\nemail_recipient \"chef-notifications@example.com\"\r\n```\r\n\r\nIf your `sendmail` binary is not located at `/usr/sbin/sendmail`, you can\r\nspecify its location as an argument:\r\n\r\n```ruby\r\nMail.defaults do\r\n  delivery_method :sendmail, :location => '/absolute/path/to/your/sendmail'\r\nend\r\n```\r\n\r\n#### Sending email via `exim`\r\n\r\n```ruby\r\ngem     \"chef-email-reporter\"\r\nrequire \"chef-email-reporter\"\r\n\r\nMail.defaults do\r\n  delivery_method :exim\r\nend\r\n\r\nemail_sender    \"no.reply@example.com\"\r\nemail_recipient \"chef-notifications@example.com\"\r\n```\r\n\r\nIf your `exim` binary is not located at `/usr/sbin/exim`, you can specify its\r\nlocation as an argument:\r\n\r\n```ruby\r\nMail.defaults do\r\n  delivery_method :exim, :location => '/absolute/path/to/your/exim'\r\nend\r\n```\r\n\r\n## Integrating the gem into your workflow\r\n\r\nOne might wonder how to integrate into one's workflow.  While the method of\r\nintegration will vary from deployment to deployment, I will briefly discuss how\r\nI've integrated it into mine.\r\n\r\nIn my organization, I've configured bare-metal deployment via Razor Server\r\n(https://github.com/puppetlabs/razor-server).  After Razor deploys the operating\r\nsystem, it runs a script on the node which:\r\n\r\n* Installs Chef\r\n* Installs the `chef-email-reporter` gem\r\n* Writes a basic `/etc/chef/client.rb`\r\n* Runs `chef-client` to register and configure the node\r\n\r\nOf course, you don't need to be running Razor Server to use this gem.  Simply\r\nhave whichever bare-metal deployment solution you're running install the gem and\r\nconfigure `/etc/chef/client.rb`.  If you're not running a bare-metal deployment\r\nsolution, then you'll simply have to perform these steps manually.\r\n\r\n## Contributing\r\n\r\n1. Fork it (https://github.com/jeffshantz/chef-email-reporter/fork)\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request\r\n\r\n## License\r\n\r\n```\r\nCopyright 2014, Jeff Shantz\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}